{"version":3,"sources":["assets/img/close.svg","assets/img/gauge.svg","assets/img/indicator.svg","assets/img/thumbDown.svg","assets/img/thumbUp.svg","data/movies.js","components/commons/Select/Select.js","components/commons/Select/Select.redux.js","components/Header/Header.js","components/Movie/Movie.js","components/MovieList/MovieList.js","components/MovieList/MovieList.redux.js","components/commons/Button/Button.js","components/Pagination/Pagination.js","components/Pagination/Pagination.redux.js","components/Footer/Footer.js","components/Footer/Footer.redux.js","components/App/App.js","actions/types.js","reducers/setCurrentCategoryReducer.js","reducers/setCurrentPageReducer.js","reducers/setMoviesPerPageReducer.js","reducers/index.js","store.js","serviceWorker.js","index.js"],"names":["module","exports","movies","id","title","category","likes","dislikes","movies$","Promise","resolve","reject","setTimeout","connect","undefined","dispatch","setCurrentCategoryReducer","currentCategory","type","setMoviesPerPageReducer","moviesPerPage","label","content","defaultValue","useState","selectValue","setSelectValue","htmlFor","name","value","onChange","e","target","map","item","i","key","Header","categoriesList","className","Movie","deleteMovie","setUserEvaluation","evaluation","countLikes","countDislikes","evaluationRatio","onClick","src","close","alt","indicator","style","transform","gauge","thumbDown","thumbUp","state","currentPage","setCurrentPageReducer","isLoading","moviesList","setMoviesList","setTotalPages","setCategoriesList","moviesListForCategory","setMoviesListForCategory","moviesToPrint","setMoviesToPrint","userEvaluation","movie","filter","length","categories","useEffect","Math","ceil","slice","timerGaugeEffect","document","getElementsByTagName","classList","remove","add","clearTimeout","Button","lib","onclick","disabled","totalPages","disabledPrevious","setDisabledPrevious","disabledNext","setDisabledNext","parseInt","App","then","setIsLoading","catch","error","console","log","Set","SET_CURRENT_CATEGORY","SET_CURRENT_PAGE","SET_MOVIES_PER_PAGE","action","rootReducer","combineReducers","store","createStore","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sHAAAA,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,4SCArCC,G,MAAS,CACX,CACIC,GAAI,IACJC,MAAO,WACPC,SAAU,SACVC,MAAO,EACPC,SAAU,GACX,CACCJ,GAAI,IACJC,MAAO,eACPC,SAAU,SACVC,MAAO,EACPC,SAAU,GACX,CACCJ,GAAI,IACJC,MAAO,wBACPC,SAAU,YACVC,MAAO,EACPC,SAAU,GACX,CACCJ,GAAI,IACJC,MAAO,gBACPC,SAAU,WACVC,MAAO,EACPC,SAAU,GACX,CACCJ,GAAI,IACJC,MAAO,WACPC,SAAU,QACVC,MAAO,GACPC,SAAU,GACX,CACCJ,GAAI,IACJC,MAAO,eACPC,SAAU,WACVC,MAAO,GACPC,SAAU,GACX,CACCJ,GAAI,IACJC,MAAO,eACPC,SAAU,WACVC,MAAO,MACPC,SAAU,IACX,CACCJ,GAAI,IACJC,MAAO,QACPC,SAAU,WACVC,MAAO,EACPC,SAAU,GACX,CACCJ,GAAI,IACJC,MAAO,YACPC,SAAU,WACVC,MAAO,EACPC,SAAU,GACX,CACCJ,GAAI,KACJC,MAAO,YACPC,SAAU,WACVC,MAAO,GACPC,SAAU,MAILC,EAAU,IAAIC,SAAQ,SAACC,EAASC,GAAV,OAAqBC,WAAWF,EAAS,IAAKR,M,qBChBlEW,mBACXC,GCjD8B,SAAAC,GAC9B,MAAO,CACHC,0BAA2B,SAACC,GAAD,OAAqBF,EAAS,CAAEG,KAAM,uBAAwBD,qBACzFE,wBAAyB,SAACC,GAAD,OAAmBL,EAAS,CAAEG,KAAM,sBAAuBE,sBD6C7EP,EAxCA,SAAC,GAMT,IALHQ,EAKE,EALFA,MACAC,EAIE,EAJFA,QACAC,EAGE,EAHFA,aACAP,EAEE,EAFFA,0BACAG,EACE,EADFA,wBACE,EAEoCK,mBAASD,GAF7C,mBAEKE,EAFL,KAEkBC,EAFlB,KAUF,OACI,6BACI,2BAAOC,QAASN,GAAQA,EAAxB,KACA,4BACIO,KAAMP,EACNQ,MAAOJ,EACPK,SAZZ,SAAsBC,GAClBL,EAAeK,EAAEC,OAAOH,OACd,kBAAVR,GAA0BL,EAA0Be,EAAEC,OAAOH,OACnD,mBAAVR,GAA8BF,EAAwBY,EAAEC,OAAOH,SAWvD,4BAAQA,MAAON,GAAeA,GAC7BD,EAAQW,KAAI,SAACC,EAAMC,GAAP,OACTD,IAASX,GACT,4BAAQa,IAAKD,EAAGN,MAAOK,GAAOA,WEVnCG,EAnBA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAEd,OACI,gCACI,yBAAKC,UAAU,aACX,kBAAC,EAAD,CACIlB,MAAM,gBACNC,QAASgB,EACTf,aAAa,W,2GC2DlBiB,EA/DD,SAAC,GASR,IARHC,EAQE,EARFA,YACAC,EAOE,EAPFA,kBACAvC,EAME,EANFA,GACAC,EAKE,EALFA,MACAC,EAIE,EAJFA,SACAC,EAGE,EAHFA,MACAC,EAEE,EAFFA,SACAoC,EACE,EADFA,WAGIC,EAA4B,SAAfD,EAAwBrC,EAAQ,EAAIA,EACjDuC,EAA+B,YAAfF,EAA2BpC,EAAW,EAAIA,EAC1DuC,EAAyBF,GAAcA,EAAaC,GAAlC,IAAmD,GAEzE,OACI,yBAAKN,UAAU,SACX,4BAAKlC,GACL,4BAAQkC,UAAU,SAASQ,QAAS,kBAAMN,EAAYtC,EAAIE,KACtD,yBAAK2C,IAAKC,IAAOV,UAAU,QAAQW,IAAI,WAE3C,4BAAK9C,GACL,yBAAKmC,UAAU,mBACX,yBAAKS,IAAKG,IAAWZ,UAAU,YAAYW,IAAI,YAC3CE,MAAO,CAACC,UAAW,gCAAkCP,EAAkB,UAE3E,yBAAKE,IAAKM,IAAOf,UAAU,QAAQW,IAAI,WAE3C,yBAAKX,UAAU,sBACX,yBAAKQ,QAAS,kBAAML,EAAkBvC,EAAI,YAAYoC,UAAU,WAC5D,yBAAKS,IAAKO,IAAWhB,UAAU,QAAQW,IAAI,gBAE/C,yBAAKH,QAAS,kBAAML,EAAkBvC,EAAI,SAASoC,UAAU,QACzD,yBAAKS,IAAKQ,IAASjB,UAAU,QAAQW,IAAI,eAGjD,yBAAKX,UAAU,oBACX,2BAAIM,EAAJ,aACA,2BAAID,EAAJ,WAEJ,yBAAKL,UAAU,mBACK,SAAfI,EACG,0BAAMJ,UAAU,mBAAhB,6BACe,YAAfI,EACI,0BAAMJ,UAAU,sBAAhB,gCACA,kC,yjBC9CxB,IA0Ge1B,eCnHgB,SAAA4C,GAC3B,MAAO,CACHxC,gBAAiBwC,EAAMzC,0BACvBI,cAAeqC,EAAMtC,wBACrBuC,YAAaD,EAAME,0BAIO,SAAA5C,GAC9B,MAAO,CACHC,0BAA2B,SAACC,GAAD,OAAqBF,EAAS,CAAEG,KAAM,uBAAwBD,qBACzF0C,sBAAuB,SAACD,GAAD,OAAiB3C,EAAS,CAAEG,KAAM,mBAAoBwC,oBDwGtE7C,EA1GG,SAAC,GAYZ,IAXH+C,EAWE,EAXFA,UACAC,EAUE,EAVFA,WACAC,EASE,EATFA,cACA7C,EAQE,EARFA,gBACAD,EAOE,EAPFA,0BACAI,EAME,EANFA,cACA2C,EAKE,EALFA,cACAL,EAIE,EAJFA,YACAC,EAGE,EAHFA,sBACArB,EAEE,EAFFA,eACA0B,EACE,EADFA,kBACE,EAEwDxC,mBAASqC,GAFjE,mBAEKI,EAFL,KAE4BC,EAF5B,OAGwC1C,mBAASyC,GAHjD,mBAGKE,EAHL,KAGoBC,EAHpB,KAmCF,SAAS1B,EAAkBvC,EAAIkE,GAC3BP,EAAcD,EAAW5B,KAAI,SAAAqC,GAAK,OAC9BA,EAAMnE,KAAOA,EACTmE,EAAM3B,aAAe0B,EAArB,KACQC,EADR,CACe3B,WAAY,KAD3B,KAEQ2B,EAFR,CAEe3B,WAAY0B,IAC3BC,MAIZ,SAAS7B,EAAYtC,EAAIE,GACrByD,EAAcD,EAAWU,QAAO,SAAAD,GAAK,OAAIA,EAAMnE,KAAOA,MACzB,IAAzBgE,EAAcK,QAAgBd,EAAc,GAC5CC,EAAsBD,EAAc,GAE+B,IAAnEG,EAAWU,QAAO,SAAAD,GAAK,OAAIA,EAAMjE,WAAaA,KAAUmE,SACxDR,EAAkB1B,EAAeiC,QAC7B,SAAAE,GAAU,OAAIA,IAAepE,MAEjCW,EAA0B,QAIlC,OArDA0D,qBAAU,WAEFR,EADoB,QAApBjD,EACyB4C,EAECA,EAAWU,QACjC,SAAAD,GAAK,OAAIA,EAAMjE,WAAaY,QAGrC,CAACA,EAAiB4C,IAErBa,qBAAU,WACNX,EAAcY,KAAKC,KAAKX,EAAsBO,OAASpD,MACxD,CAAC6C,EAAuB7C,EAAe2C,IAE1CW,qBAAU,WACNN,EAAiBH,EAAsBY,OAClCnB,EAAc,GAAKtC,EAAesC,EAActC,MAEtD,CAAC6C,EAAuBP,EAAatC,IAExCsD,qBAAU,WACN,IAAII,EAAmBlE,YAAW,kBAC9BmE,SAASC,qBAAsB,QAAS,GAAGC,UAAUC,OAAO,oBAAmB,KAEnF,OAAO,WACHH,SAASC,qBAAsB,QAAS,GAAGC,UAAUE,IAAI,kBACzDC,aAAaN,MAElB,CAAC7D,EAAiByC,EAAatC,IA0B9B,0BAAMmB,UAAU,kBACZ,yBAAKA,UAAU,wBAEPsB,EAAWW,OAAS,EAChBL,EAAclC,KAAI,SAAAqC,GAAK,OACnB,kBAAC,EAAD,CACIlC,IAAKkC,EAAMnE,GACXA,GAAImE,EAAMnE,GACVC,MAAOkE,EAAMlE,MACbC,SAAUiE,EAAMjE,SAChBC,MAAOgE,EAAMhE,MACbC,SAAU+D,EAAM/D,SAChBoC,WAAY2B,EAAM3B,WAClBF,YAAaA,EACbC,kBAAmBA,OAGvBkB,EACA,+EACA,kEE5EbyB,G,kBAlBA,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAE5B,OACI,2BACItE,KAAK,SACLW,MAAOyD,EACPvC,QAASwC,EACTC,SAAUA,MCmDP3E,eC/DgB,SAAA4C,GAC3B,MAAO,CACHxC,gBAAiBwC,EAAMzC,0BACvB0C,YAAaD,EAAME,0BAIO,SAAA5C,GAC9B,MAAO,CACH4C,sBAAuB,SAACD,GAAD,OAAiB3C,EAAS,CAAEG,KAAM,mBAAoBwC,oBDsDtE7C,EAtDI,SAAC,GAKb,IAJH6C,EAIE,EAJFA,YACA+B,EAGE,EAHFA,WACA9B,EAEE,EAFFA,sBACA1C,EACE,EADFA,gBACE,EAE8CO,oBAAS,GAFvD,mBAEKkE,EAFL,KAEuBC,EAFvB,OAGsCnE,oBAAS,GAH/C,mBAGKoE,EAHL,KAGmBC,EAHnB,KAyBF,OApBAnB,qBAAU,WACNf,EAAsB,KACvB,CAAC1C,EAAiB0C,IAGrBe,qBAAU,WACNiB,EAAoC,IAAhBjC,GACpBmC,EAAgBnC,IAAgB+B,GAA6B,IAAfA,KAC/C,CAAC/B,EAAa+B,IAab,yBAAKlD,UAAU,cACVmB,EADL,MACqB+B,EACjB,kBAAC,EAAD,CACID,SAAUE,EACVH,QAfZ,WAEI5B,IADAD,IAeQ4B,IAAI,0BAER,kBAAC,EAAD,CACIE,SAAUI,EACVL,QAfZ,WAEI5B,IADAD,IAeQ4B,IAAI,sBEjBLzE,eCjCgB,SAAA4C,GAC3B,MAAO,CACHrC,cAAeqC,EAAMtC,gCDiCzBL,EAFWD,EAvBA,SAAC,GAGT,IAFHO,EAEE,EAFFA,cACAqE,EACE,EADFA,WAGA,OACI,gCACI,yBAAKlD,UAAU,aACX,kBAAC,EAAD,CACIlB,MAAM,iBACNC,QAAS,CAAC,EAAG,EAAG,IAChBC,aAAcuE,SAAS1E,KAE3B,kBAAC,EAAD,CAAYqE,WAAYA,SEgCzBM,EA9CH,WAERrB,qBAAU,WACNlE,EACKwF,MACG,SAAA9F,GACI4D,EAAc5D,GACd+F,GAAa,MAGpBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QACjC,IAXW,MAaoB3E,oBAAS,GAb7B,mBAaPoC,EAbO,KAaIqC,EAbJ,OAcsBzE,mBAAS,IAd/B,mBAcPqC,EAdO,KAcKC,EAdL,OAe8BtC,mBAAS,IAfvC,mBAePc,EAfO,KAeS0B,EAfT,OAgBsBxC,mBAAS,GAhB/B,mBAgBPiE,EAhBO,KAgBK1B,EAhBL,KAsBd,OAJAW,qBAAU,WACNV,EAAkB,YAAI,IAAIsC,IAAIzC,EAAW5B,KAAI,SAAAqC,GAAK,OAAIA,EAAMjE,iBAC7D,CAACwD,IAGA,yBAAKtB,UAAU,OACX,kBAAC,EAAD,CAAQD,eAAgBA,IACxB,kBAAC,EAAD,CACIsB,UAAWA,EACXC,WAAYA,EACZC,cAAeA,EACfC,cAAeA,EACfzB,eAAgBA,EAChB0B,kBAAmBA,IAEvB,kBAAC,EAAD,CAAQyB,WAAYA,M,OCzCnBc,EAAuB,uBAGvBC,EAAmB,mBAGnBC,EAAsB,sBCIpBzF,MATf,WAAyD,IAAtByC,EAAqB,uDAAf,MAAOiD,EAAQ,uCACpD,OAAQA,EAAOxF,MACX,KAAKqF,EACD,OAAOG,EAAOzF,gBAClB,QACI,OAAOwC,ICIJE,MATf,WAAiD,IAAlBF,EAAiB,uDAAX,EAAGiD,EAAQ,uCAC5C,OAAQA,EAAOxF,MACX,KAAKsF,EACD,OAAOE,EAAOhD,YAClB,QACI,OAAOD,ICIJtC,MATf,WAAmD,IAAlBsC,EAAiB,uDAAX,EAAGiD,EAAQ,uCAC9C,OAAQA,EAAOxF,MACX,KAAKuF,EACD,OAAOC,EAAOtF,cAClB,QACI,OAAOqC,ICMJkD,EANKC,YAAgB,CAChC5F,4BACA2C,wBACAxC,4BCAW0F,EALDC,YACZH,GCMkBI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACL,kBAAC,IAAD,CAAUR,MAAOA,GACb,kBAAC,EAAD,OAEJ9B,SAASuC,eAAe,SDqHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzB,MAAK,SAAA0B,GACjCA,EAAaC,kB","file":"static/js/main.f5411529.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close.501d2216.svg\";","module.exports = __webpack_public_path__ + \"static/media/gauge.65a7d79f.svg\";","module.exports = __webpack_public_path__ + \"static/media/indicator.f26df3e0.svg\";","module.exports = __webpack_public_path__ + \"static/media/thumbDown.527f053a.svg\";","module.exports = __webpack_public_path__ + \"static/media/thumbUp.1955e176.svg\";","const movies = [\r\n    {\r\n        id: '1',\r\n        title: 'Oceans 8',\r\n        category: 'Comedy',\r\n        likes: 4,\r\n        dislikes: 1\r\n    }, {\r\n        id: '2',\r\n        title: 'Midnight Sun',\r\n        category: 'Comedy',\r\n        likes: 2,\r\n        dislikes: 0\r\n    }, {\r\n        id: '3',\r\n        title: 'Les indestructibles 2',\r\n        category: 'Animation',\r\n        likes: 3,\r\n        dislikes: 1\r\n    }, {\r\n        id: '4',\r\n        title: 'Sans un bruit',\r\n        category: 'Thriller',\r\n        likes: 6,\r\n        dislikes: 6\r\n    }, {\r\n        id: '5',\r\n        title: 'Creed II',\r\n        category: 'Drame',\r\n        likes: 16,\r\n        dislikes: 2\r\n    }, {\r\n        id: '6',\r\n        title: 'Pulp Fiction',\r\n        category: 'Thriller',\r\n        likes: 11,\r\n        dislikes: 3\r\n    }, {\r\n        id: '7',\r\n        title: 'Pulp Fiction',\r\n        category: 'Thriller',\r\n        likes: 12333,\r\n        dislikes: 32\r\n    }, {\r\n        id: '8',\r\n        title: 'Seven',\r\n        category: 'Thriller',\r\n        likes: 2,\r\n        dislikes: 1\r\n    }, {\r\n        id: '9',\r\n        title: 'Inception',\r\n        category: 'Thriller',\r\n        likes: 2,\r\n        dislikes: 1\r\n    }, {\r\n        id: '10',\r\n        title: 'Gone Girl',\r\n        category: 'Thriller',\r\n        likes: 22,\r\n        dislikes: 12\r\n    },\r\n]\r\n\r\nexport const movies$ = new Promise((resolve, reject) => setTimeout(resolve, 100, movies))","import React, { useState } from 'react'\r\nimport './Select.scss'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { mapDispatchToProps } from './Select.redux.js'\r\n\r\n\r\nconst Select = ({\r\n    label,\r\n    content,\r\n    defaultValue,\r\n    setCurrentCategoryReducer,\r\n    setMoviesPerPageReducer\r\n}) => {\r\n\r\n    const [selectValue, setSelectValue] = useState(defaultValue)\r\n\r\n    function handleChange(e) {\r\n        setSelectValue(e.target.value)\r\n        label === 'Catégories' && setCurrentCategoryReducer(e.target.value)\r\n        label === 'Films par page' && setMoviesPerPageReducer(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <label htmlFor={label}>{label}:</label>\r\n            <select\r\n                name={label}\r\n                value={selectValue}\r\n                onChange={handleChange}\r\n            >\r\n                <option value={defaultValue}>{defaultValue}</option>\r\n                {content.map((item, i) =>\r\n                    item !== defaultValue &&\r\n                    <option key={i} value={item}>{item}</option>\r\n                )}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nSelect.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    setCurrentCategoryReducer: PropTypes.func.isRequired,\r\n    setMoviesPerPageReducer: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(\r\n    undefined,\r\n    mapDispatchToProps\r\n)(Select)","export const mapDispatchToProps = dispatch => {\r\n    return {\r\n        setCurrentCategoryReducer: (currentCategory) => dispatch({ type: 'SET_CURRENT_CATEGORY', currentCategory}),\r\n        setMoviesPerPageReducer: (moviesPerPage) => dispatch({ type: 'SET_MOVIES_PER_PAGE', moviesPerPage})\r\n    }\r\n}","import React from 'react'\r\nimport './Header.scss'\r\nimport Select from '../commons/Select/Select'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Header = ({ categoriesList }) => {\r\n\r\n    return (\r\n        <header>\r\n            <div className='container'>\r\n                <Select\r\n                    label='Catégories'\r\n                    content={categoriesList}\r\n                    defaultValue='all'\r\n                />\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n    categoriesList: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport './Movie.scss'\r\nimport close from '../../assets/img/close.svg'\r\nimport gauge from '../../assets/img/gauge.svg'\r\nimport indicator from '../../assets/img/indicator.svg'\r\nimport thumbDown from '../../assets/img/thumbDown.svg'\r\nimport thumbUp from '../../assets/img/thumbUp.svg'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Movie = ({\r\n    deleteMovie,\r\n    setUserEvaluation,\r\n    id,\r\n    title,\r\n    category,\r\n    likes,\r\n    dislikes,\r\n    evaluation\r\n}) => {\r\n    \r\n    let countLikes = evaluation === 'like' ? likes + 1 : likes\r\n    let countDislikes = evaluation === 'dislike' ? dislikes + 1 : dislikes\r\n    let evaluationRatio = 180 * (countLikes / (countLikes + countDislikes)) -90\r\n\r\n    return (\r\n        <div className='movie'>\r\n            <h4>{category}</h4>\r\n            <button className='delete' onClick={() => deleteMovie(id, category)} >\r\n                <img src={close} className='close' alt='close'/>\r\n            </button>\r\n            <h3>{title}</h3>\r\n            <div className='gauge-container'>\r\n                <img src={indicator} className='indicator' alt='indicator'\r\n                    style={{transform: 'translate(-50%, 43px) rotate(' + evaluationRatio + 'deg)'}}\r\n                />\r\n                <img src={gauge} className='gauge' alt='gauge'/>\r\n            </div>\r\n            <div className='evaluation-buttons'>\r\n                <div onClick={() => setUserEvaluation(id, 'dislike')} className='dislike'>\r\n                    <img src={thumbDown} className='thumb' alt='thumb down'/>\r\n                </div>\r\n                <div onClick={() => setUserEvaluation(id, 'like')} className='like'>\r\n                    <img src={thumbUp} className='thumb' alt='thumb up'/>\r\n                </div>\r\n            </div>\r\n            <div className='evaluation-count'>\r\n                <p>{countDislikes} dislikes</p>\r\n                <p>{countLikes} likes</p>\r\n            </div>\r\n            <div className='evaluation-user'>\r\n                {evaluation === 'like' ?\r\n                    <span className='evaluation-like'>Vous avez liké ce film</span> :\r\n                    evaluation === 'dislike' ?\r\n                        <span className='evaluation-dislike'>Vous avez disliké ce film</span> :\r\n                        <span></span>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nMovie.propTypes = {\r\n    deleteMovie: PropTypes.func.isRequired,\r\n    setUserEvaluation: PropTypes.func.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    category: PropTypes.string.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n    dislikes: PropTypes.number.isRequired,\r\n    evaluation: PropTypes.string\r\n}\r\n\r\nexport default Movie","import React, { useState, useEffect } from 'react'\r\nimport './MovieList.scss'\r\nimport Movie from '../Movie/Movie'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { mapStateToProps, mapDispatchToProps } from './MovieList.redux.js'\r\n\r\n\r\nconst MovieList = ({\r\n    isLoading,\r\n    moviesList,\r\n    setMoviesList,\r\n    currentCategory,\r\n    setCurrentCategoryReducer,\r\n    moviesPerPage,\r\n    setTotalPages,\r\n    currentPage,\r\n    setCurrentPageReducer,\r\n    categoriesList,\r\n    setCategoriesList\r\n}) => {\r\n\r\n    const [moviesListForCategory, setMoviesListForCategory] = useState(moviesList)\r\n    const [moviesToPrint, setMoviesToPrint] = useState(moviesListForCategory)\r\n\r\n    useEffect(() => {\r\n        if (currentCategory === 'all') {\r\n            setMoviesListForCategory(moviesList)\r\n        } else {\r\n            setMoviesListForCategory( moviesList.filter(\r\n                movie => movie.category === currentCategory\r\n            ))\r\n        }\r\n    }, [currentCategory, moviesList])\r\n\r\n    useEffect(() => {\r\n        setTotalPages(Math.ceil(moviesListForCategory.length / moviesPerPage))\r\n    }, [moviesListForCategory, moviesPerPage, setTotalPages])\r\n\r\n    useEffect(() => {\r\n        setMoviesToPrint(moviesListForCategory.slice(\r\n            (currentPage - 1) * moviesPerPage, currentPage * moviesPerPage\r\n        ))\r\n    }, [moviesListForCategory, currentPage, moviesPerPage])\r\n\r\n    useEffect(() => {\r\n        let timerGaugeEffect = setTimeout(() =>\r\n            document.getElementsByTagName( 'main' )[0].classList.remove('gauge-inactive'), 300\r\n        )\r\n        return () => {\r\n            document.getElementsByTagName( 'main' )[0].classList.add('gauge-inactive')\r\n            clearTimeout(timerGaugeEffect)\r\n        }\r\n    }, [currentCategory, currentPage, moviesPerPage])\r\n\r\n    function setUserEvaluation(id, userEvaluation) {\r\n        setMoviesList(moviesList.map(movie =>\r\n            movie.id === id ?\r\n                movie.evaluation === userEvaluation ?\r\n                    {...movie, evaluation: ''} :\r\n                    {...movie, evaluation: userEvaluation} :\r\n                movie\r\n        ))\r\n    }\r\n\r\n    function deleteMovie(id, category) {\r\n        setMoviesList(moviesList.filter(movie => movie.id !== id))\r\n        if (moviesToPrint.length === 1 && currentPage > 1) {\r\n            setCurrentPageReducer(currentPage - 1)\r\n        }\r\n        if (moviesList.filter(movie => movie.category === category).length === 1) {\r\n            setCategoriesList(categoriesList.filter(\r\n                categories => categories !== category\r\n            ))\r\n            setCurrentCategoryReducer('all')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <main className='gauge-inactive'>\r\n            <div className='movie-list container'>\r\n                {\r\n                    moviesList.length > 0 ?\r\n                        moviesToPrint.map(movie =>\r\n                            <Movie\r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                title={movie.title}\r\n                                category={movie.category}\r\n                                likes={movie.likes}\r\n                                dislikes={movie.dislikes}\r\n                                evaluation={movie.evaluation}\r\n                                deleteMovie={deleteMovie}\r\n                                setUserEvaluation={setUserEvaluation}\r\n                            />\r\n                        ) :\r\n                            isLoading ?\r\n                            <p>La vidéothèque est en cours de chargement.</p> :\r\n                            <p>La vidéothèque est vide.</p>\r\n                }\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nMovieList.propTypes = {\r\n    moviesList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    setMoviesList: PropTypes.func.isRequired,\r\n    currentCategory: PropTypes.string.isRequired,\r\n    currentPage: PropTypes.number.isRequired,\r\n    setTotalPages: PropTypes.func.isRequired,\r\n    setCurrentPageReducer: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MovieList)","export const mapStateToProps = state => {\r\n    return {\r\n        currentCategory: state.setCurrentCategoryReducer,\r\n        moviesPerPage: state.setMoviesPerPageReducer,\r\n        currentPage: state.setCurrentPageReducer\r\n    }\r\n}\r\n\r\nexport const mapDispatchToProps = dispatch => {\r\n    return {\r\n        setCurrentCategoryReducer: (currentCategory) => dispatch({ type: 'SET_CURRENT_CATEGORY', currentCategory}),\r\n        setCurrentPageReducer: (currentPage) => dispatch({ type: 'SET_CURRENT_PAGE', currentPage})\r\n    }\r\n}","import React from 'react'\r\nimport './Button.scss'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Button = ({ lib, onclick, disabled }) => {\r\n\r\n    return (\r\n        <input\r\n            type='button'\r\n            value={lib}\r\n            onClick={onclick}\r\n            disabled={disabled}\r\n        />\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    lib: PropTypes.string.isRequired,\r\n    onclick: PropTypes.func.isRequired,\r\n    disabled: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default Button","import React, { useState, useEffect } from 'react'\r\nimport './Pagination.scss'\r\nimport Button from '../commons/Button/Button'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { mapStateToProps, mapDispatchToProps } from './Pagination.redux.js'\r\n\r\n\r\nconst Pagination = ({\r\n    currentPage,\r\n    totalPages,\r\n    setCurrentPageReducer,\r\n    currentCategory\r\n}) => {\r\n\r\n    const [disabledPrevious, setDisabledPrevious] = useState(false)\r\n    const [disabledNext, setDisabledNext] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setCurrentPageReducer(1)\r\n    }, [currentCategory, setCurrentPageReducer])\r\n\r\n\r\n    useEffect(() => {\r\n        setDisabledPrevious(currentPage === 1 ? true : false)\r\n        setDisabledNext(currentPage === totalPages || totalPages === 0)\r\n    }, [currentPage, totalPages])\r\n\r\n    function goPreviousPage() {\r\n        currentPage--\r\n        setCurrentPageReducer(currentPage)\r\n    }\r\n\r\n    function goNextPage() {\r\n        currentPage++\r\n        setCurrentPageReducer(currentPage)\r\n    }\r\n\r\n    return (\r\n        <div className='pagination'>\r\n            {currentPage} / {totalPages}\r\n            <Button\r\n                disabled={disabledPrevious}\r\n                onclick={goPreviousPage}\r\n                lib='page précédente'\r\n            />\r\n            <Button\r\n                disabled={disabledNext}\r\n                onclick={goNextPage}\r\n                lib='page suivante'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nPagination.propTypes = {\r\n    currentPage: PropTypes.number.isRequired,\r\n    totalPages: PropTypes.number.isRequired,\r\n    setCurrentPageReducer: PropTypes.func.isRequired,\r\n    currentCategory: PropTypes.string.isRequired\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Pagination)","export const mapStateToProps = state => {\r\n    return {\r\n        currentCategory: state.setCurrentCategoryReducer,\r\n        currentPage: state.setCurrentPageReducer\r\n    }\r\n}\r\n\r\nexport const mapDispatchToProps = dispatch => {\r\n    return {\r\n        setCurrentPageReducer: (currentPage) => dispatch({ type: 'SET_CURRENT_PAGE', currentPage})\r\n    }\r\n}","import React from 'react'\r\nimport './Footer.scss'\r\nimport Select from '../commons/Select/Select'\r\nimport Pagination from '../Pagination/Pagination'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { mapStateToProps } from './Footer.redux.js'\r\n\r\n\r\nconst Footer = ({\r\n    moviesPerPage,\r\n    totalPages\r\n}) => {\r\n\r\n    return (\r\n        <footer>\r\n            <div className='container'>\r\n                <Select\r\n                    label='Films par page'\r\n                    content={[4, 8, 12]}\r\n                    defaultValue={parseInt(moviesPerPage)}\r\n                />\r\n                <Pagination totalPages={totalPages} />\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nFooter.propTypes = {\r\n    totalPages: PropTypes.number.isRequired\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    undefined\r\n)(Footer)","export const mapStateToProps = state => {\r\n    return {\r\n        moviesPerPage: state.setMoviesPerPageReducer,\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\nimport './App.scss'\nimport { movies$ } from '../../data/movies'\nimport Header from '../Header/Header'\nimport MovieList from '../MovieList/MovieList'\nimport Footer from '../Footer/Footer'\nimport PropTypes from 'prop-types'\n\n\nconst App = () => {\n\n    useEffect(() => {\n        movies$\n            .then(\n                movies => {\n                    setMoviesList(movies)\n                    setIsLoading(false)\n                }\n            )\n            .catch(error => console.log(error))\n    }, [])\n\n    const [isLoading, setIsLoading] = useState(true)\n    const [moviesList, setMoviesList] = useState([])\n    const [categoriesList, setCategoriesList] = useState([])\n    const [totalPages, setTotalPages] = useState(1)\n\n    useEffect(() => {\n        setCategoriesList([...new Set(moviesList.map(movie => movie.category))])\n    }, [moviesList])\n\n    return (\n        <div className=\"App\">\n            <Header categoriesList={categoriesList} />\n            <MovieList\n                isLoading={isLoading}\n                moviesList={moviesList}\n                setMoviesList={setMoviesList}\n                setTotalPages={setTotalPages}\n                categoriesList={categoriesList}\n                setCategoriesList={setCategoriesList}\n            />\n            <Footer totalPages={totalPages} />\n        </div>\n    )\n}\n\nApp.propTypes = {\n    moviesList: PropTypes.arrayOf(PropTypes.object),\n    setMoviesList: PropTypes.func,\n    categoriesList: PropTypes.arrayOf(PropTypes.string),\n    totalPages: PropTypes.number,\n    setTotalPages: PropTypes.func\n}\n\nexport default App","// Set current category\r\nexport const SET_CURRENT_CATEGORY = 'SET_CURRENT_CATEGORY'\r\n\r\n// Set current page\r\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\n\r\n// Set movies per page\r\nexport const SET_MOVIES_PER_PAGE = 'SET_MOVIES_PER_PAGE'","import { SET_CURRENT_CATEGORY } from '../actions/types'\r\n\r\nfunction setCurrentCategoryReducer(state='all', action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_CATEGORY:\r\n            return action.currentCategory\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default setCurrentCategoryReducer","import { SET_CURRENT_PAGE } from '../actions/types'\r\n\r\nfunction setCurrentPageReducer(state=1, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_PAGE:\r\n            return action.currentPage\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default setCurrentPageReducer","import { SET_MOVIES_PER_PAGE } from '../actions/types'\r\n\r\nfunction setMoviesPerPageReducer(state=8, action) {\r\n    switch (action.type) {\r\n        case SET_MOVIES_PER_PAGE:\r\n            return action.moviesPerPage\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default setMoviesPerPageReducer","import { combineReducers } from 'redux'\r\n\r\nimport setCurrentCategoryReducer from './setCurrentCategoryReducer'\r\nimport setCurrentPageReducer from './setCurrentPageReducer'\r\nimport setMoviesPerPageReducer from './setMoviesPerPageReducer'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    setCurrentCategoryReducer,\r\n    setCurrentPageReducer,\r\n    setMoviesPerPageReducer\r\n})\r\n\r\nexport default rootReducer","import { createStore } from 'redux'\r\n\r\nimport rootReducer from './reducers'\r\n\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n\r\nexport default store","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/style.scss';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}